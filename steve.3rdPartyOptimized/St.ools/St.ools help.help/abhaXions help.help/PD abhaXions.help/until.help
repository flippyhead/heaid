max v2;#N vpatcher 26 56 789 700;#P origin 0 -8;#P window setfont "Sans Serif" 9.;#P newex 589 557 105 196617 Abhaxions.Copyright;#P message 488 94 27 196617 42;#P message 459 94 27 196617 3;#P message 430 94 27 196617 100;#P newex 67 564 36 196617 + 1;#P button 28 521 15 0;#P button 25 381 15 0;#P comment 19 157 248 196617 or:;#P comment 59 118 101 196617 i = i + 1;#P comment 47 180 113 196617 FOR i = 0 TO 100;#P comment 47 212 113 196617 NEXT;#P comment 58 196 101 196617 ' do something;#P comment 66 29 114 196617 - LOPPing mechanism;#P newex 67 586 36 196617 % 10;#P newex 28 542 36 196617 until;#P comment 59 521 260 196617 start;#P newex 28 564 36 196617 i;#P newex 106 564 36 196617 sel 0;#P newex 28 608 36 196617 print;#P window linecount 2;#P comment 19 50 385 196617 Every modern programming language will have various "looping" mechanisms: either in the form of an object \, or as a data structure. For example in Visual Basic:;#P window linecount 1;#P comment 16 237 310 196617 And now a Max version of the above programming structures:;#P newex 24 262 36 196617 until;#P newex 24 285 36 196617 print i;#P window linecount 3;#P comment 17 312 372 196617 If you start [until] with a "bang" \, it will begin an infinite loop! Please plan ahead in this case so that there is a mechanism in place to stop the loop - otherwise Max will effectively freeze.;#P window linecount 1;#P comment 17 359 260 196617 HOW TO FREEZE Max;#P newex 25 401 36 196617 until;#P newex 25 424 36 196617 print;#P comment 67 381 260 196617 DO NOT CLICK. DO NOT CLICK. DO NOT CLICK.;#P comment 47 86 113 196617 i = 0;#P comment 47 134 113 196617 LOOP;#P comment 47 102 113 196617 DO UNTIL i = 100;#P window linecount 2;#P comment 26 482 317 196617 The example below includes a method to stop the loop to prevent Max from looping infinitely.;#P comment 423 50 274 196617 If you start [until] with a number \, it iterates that number of times. The [uzi] object in MAX works the same way.;#P window linecount 1;#P newex 430 137 36 196617 until;#P newex 430 160 36 196617 print i;#P window linecount 2;#P comment 26 447 317 196617 The [until] object's left inlet starts a loop in which it outputs "bang" until its right inlet gets a "bang" which stops it.;#P hidden button 407 25 15 0;#P hidden button 407 675 15 0;#P window linecount 1;#P comment 431 586 260 196617 This document was updated for max;#P comment 425 191 260 196617 RELATED OBJECTS;#P window linecount 2;#P comment 430 210 260 196617 ?? This author does not know of any other native looping mechanisms in PD.;#P window linecount 3;#P comment 66 401 260 196617 If you click \, Max kind of freezes for a pretty long time. (Its not as bad as the Pd version \, because there is a kind of maximum number of bangs in the abstraction...);#P window linecount 1;#P newex 19 27 36 196617 until;#P connect 21 0 20 0;#P connect 36 0 17 0;#P connect 17 0 16 0;#P connect 37 0 28 0;#P connect 28 0 26 0;#P connect 26 0 24 0;#P connect 25 0 28 1;#P connect 26 0 38 0;#P connect 38 0 29 0;#P connect 29 0 25 0;#P connect 6 0 5 0;#P connect 41 0 9 0;#P connect 40 0 9 0;#P connect 39 0 9 0;#P connect 9 0 8 0;#P pop;