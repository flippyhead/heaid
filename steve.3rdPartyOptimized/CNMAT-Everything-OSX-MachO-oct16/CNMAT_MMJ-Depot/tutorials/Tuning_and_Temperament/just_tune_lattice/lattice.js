sketch.default2d();vlines = 5;hlines = 3;root = 220.;octave = 1;chords = 1;coords = [0,0];freqs = [220., 440., 660., 880.];xes = [0,0,0,0];yes = [0,0,0,0];anote = 60;fsize = 9;bang();function triads(n){			chords = n;	calc();}function note(i){	anote = i;	draw();	refresh();}function ftom(f){	return(Math.round(Math.log(f / 8.175798) / Math.log(1.0594633)));}function mtof(m){	return (440. * exp( 0.057762265 * (m - 69.)));}function isin(x,y){	for (i = xes.length - 1; i > 0; i--)	{		if (x == xes[i] && y == yes[i]) return(1);	}	return(0);}function fontsize(n){	fsize = n;	calc();}function draw(){	with (sketch) {		glclearcolor(1,1,1,1);		glclear();			glclearcolor(0,0,0,1);		font("Sans Serif");		fontsize(fsize);		textalign("center","center");				for (v = -vlines; v <= vlines; v++)		{			for (h = -hlines; h <= hlines; h++)			{				xpos = (v+ (h*0.5));				moveto(xpos / vlines, h / hlines);				n = d = 1;				if (v < 0) d *= Math.pow(3,Math.abs(v));				else n *= Math.pow(3,Math.abs(v));				if (h < 0) d *= Math.pow(5,Math.abs(h));				else n *= Math.pow(5,Math.abs(h));				if (isin(v,h)) glcolor(0.8,0.5,0.5,1.);				else glcolor(0.5,0.5,0.5,1.);				circle(0.25/hlines,0,360);				afreq = p2f(v,h);				if (anote == ftom(afreq)) glcolor(1.,1.,1.,1.);				else glcolor(0.,0.,0.,1.);				text(n.toString()+'/'+d.toString());			}		}	}}function bang(){	calc();}function msg_float(v){	root = v;	calc();}function noreduce(v){	octave = v ? 0 : 1;	calc();}function fsaa(v){	sketch.fsaa = v;	bang();}function onclick(x,y,but,cmd,shift,capslock,option,ctrl){	coords = sketch.screentoworld(x,y);	calc();}function coord(x,y){	coords[0] = x;	coords[1] = y;	calc();}function calc(){	yy = coords[1] * hlines;	iy = Math.round(yy);	xx = coords[0] * vlines - iy * 0.5;	ix = Math.round(xx);	pos2freq(1, ix,iy);		if (chords) {		if (Math.abs(yy - iy) > Math.abs(2 * (xx - ix)))		{			if (yy > iy) 			{				pos2freq(2, ix - 1, iy + 1);				pos2freq(3, ix, iy + 1);			} else {				pos2freq(2, ix, iy - 1);				pos2freq(3, ix + 1, iy - 1);			}			freqs[0] = freqs[2] * 0.5;		} else {			if (xx > ix)			{				pos2freq(2, ix + 1, iy);				if (yy > iy) pos2freq(3, ix, iy + 1);					else pos2freq(3, ix + 1, iy - 1);				freqs[0] = freqs[1] * 0.5;			} else {				pos2freq(2, ix - 1, iy);				if (yy > iy) pos2freq(3, ix - 1, iy + 1);					else pos2freq(3, ix, iy - 1);				freqs[0] = freqs[2] * 0.5;			}		}	} else {		pos2freq(0, ix,iy);		pos2freq(2, ix,iy);		pos2freq(3, ix,iy);	}	draw();	refresh();	outlet(0, freqs.sort()); }function p2f (x,y){	mult = Math.pow(3, x) * Math.pow(5, y);	freq = root * mult;	log = Math.log(mult) / Math.log(2.);	div = Math.pow(2., Math.floor(log));	freq = freq / div;	return(freq);}function pos2freq(i, x, y){	xes[i] = x;	yes[i] = y;	mult = Math.pow(3, x) * Math.pow(5, y);		freq = root * mult;	if (octave)	{		log = Math.log(mult) / Math.log(2.);		div = Math.pow(2., Math.floor(log));		freq = freq / div;	}	freqs[i] = freq;}function ondrag(x,y,but,cmd,shift,capslock,option,ctrl){	coords = sketch.screentoworld(x,y);	calc();}function forcesize(w,h){	if (w!=h) {		h = w;		box.size(w,h);	}}forcesize.local = 1;function onresize(w,h){	forcesize(w,h);	calc();}