<jittershader name="diff_pass">	<description>	pass pixels with difference above threshold	</description>	<param name="lum" type="float" default="0.1">		<description>luminance threshold</description>	</param>	<param name="op" type="float" default="0." />	<param name="scale" type="float" default="1." />	<param name="lumcoeff" type="vec4" default="0.299 .587 0.114 0.">	<description>Luminance coefficients (RGBA)</description>	</param>	<param name="tex0" type="int" default="0" />	<param name="tex1" type="int" default="1" />	<language name="glsl" version="1.0">		<bind param="lum" program="fp" />
		<bind param="scale" program="fp" />
		<bind param="op" program="fp" />		<bind param="lumcoeff" program="fp" />		<bind param="tex0" program="fp" />			<bind param="tex1" program="fp" />			<program name="vp" type="vertex" source="sh.passthrudim.vp.glsl" />		<program name="fp" type="fragment"><![CDATA[//Difference-passing compositing shader.//Designed for use as a replacement for Recipe 27: Debris//-----by Andrew Benson 10.2007//-----Cycling '74//setup for two textures//assumes same texdimvarying vec2 texdim0;varying vec2 texcoord0;uniform sampler2DRect tex0;uniform sampler2DRect tex1;//parametersuniform float lum;uniform float scale;uniform float op;uniform vec4 lumcoeff;void main(){   	//normalize coords and downsample	vec2 ncord = texcoord0/texdim0;	vec2 decim = texdim0*scale;	vec2 newdim = floor(ncord*decim)/decim;	newdim*=texdim0;		//grab the regular pixels	vec4 a = texture2DRect(tex0, texcoord0);	vec4 b = texture2DRect(tex1, texcoord0);		//grab the downsampled pixels	vec4 adims = texture2DRect(tex0, newdim);	vec4 bdims = texture2DRect(tex1, newdim);	//calculate our luminances	float lum_a = dot(adims,lumcoeff);	float lum_b = dot(bdims,lumcoeff);		//do differencing	float dif_ab = abs(lum_a-lum_b);		//compare	float thr1 = step(dif_ab,lum);	float thr2 = step(lum,dif_ab);	float thresh = mix(thr1,thr2,op);		// output texture	gl_FragColor = mix(a,b,thresh);}]]>		</program>	</language></jittershader>